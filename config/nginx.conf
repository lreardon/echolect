events {
    worker_connections 1024;
}

http {
		error_log /var/log/nginx/error.log debug;
		
    upstream rails_app {
				# "webapp is the name of the service in the docker-compose file"
        server webapp:3000;
    }

    server {
        listen 80;
        server_name echolect.co;
				# Redirect all HTTP requests to HTTPS
				location / {
            return 301 https://$host$request_uri;
        }

			# location /.well-known/acme-challenge/ {
		  #   root /var/www/certbot;
			# }
    }

		server {
        listen 443 ssl;
        server_name echolect.co;

        # Specify the location of the SSL certificate and private key
        ssl_certificate /etc/letsencrypt/live/echolect.co/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/echolect.co/privkey.pem;

				include /etc/letsencrypt/options-ssl-nginx.conf;
				ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        location / {
					root /usr/share/nginx/html;
					try_files $uri @rails;
				}

				location @rails {
            proxy_pass http://rails_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
						proxy_set_header  X-Forwarded-Proto $scheme;

            # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # proxy_set_header X-Forwarded-Proto $scheme;
            # proxy_set_header Upgrade $http_upgrade;
            # proxy_set_header Connection "upgrade";
        }

        # location / {
		    #     proxy_pass http://rails_app;
				# 		proxy_set_header Host $host;
				# 		proxy_set_header X-Real-IP $remote_addr;
				# 		# proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
				# 		# proxy_set_header X-Forwarded-Proto $scheme;
				# 		# proxy_set_header Upgrade $http_upgrade;
				# 		# proxy_set_header Connection "upgrade";
        # }

				location /cable {
					proxy_pass http://rails_app;
					proxy_http_version 1.1;
					proxy_set_header Upgrade $http_upgrade;
					proxy_set_header Connection "Upgrade";
					proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
					proxy_set_header Host $host;
					proxy_set_header X-Real-IP $remote_addr;
					proxy_set_header X-Forwarded-Proto https;
					# proxy_set_header X-Forwarded-Ssl on;
					# proxy_redirect off;
					}
				
				# location /public/ {
				# 	alias /usr/share/nginx/html/public/;
				# 	gzip_static on;
				# 	expires max;
				# 	add_header Cache-Control public;
				# }
    }
}